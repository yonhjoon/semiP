<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="productMapper">
	<resultMap id="productResultSet" type="Product">
		<result column="GOODS_ID" property="goodsId"/>
		<result column="SELLER_NO" property="sellerNo"/>
		<result column="CATEGORY_M" property="categoryM"/>
		<result column="TITLE" property="title"/>
		<result column="STATUS" property="status"/>
		<result column="SELL_PRICE" property="sellPrice"/>
		<result column="VIEW_COUNT" property="viewCount"/>
		<result column="P_EXPLAIN" property="pExplain"/>
		<result column="ENROLL_DATE" property="enrollDate"/>
		<result column="LOVEIT" property="loveIt" />
		<result column="RETURN_PD" property="returnPd"/>
		<result column="LOCATION_T" property="locationT"/>
		<result column="PRODUCT_STATUS" property="productStatus"/>
		<result column="NICKNAME" property="nickname"/>
		<result column="SCORE" property="score"/>
		<result column="FILE_PATH" property="filePath"/>
		<result column="CHANGE_NAME" property="changeName"/>
	</resultMap>
	
	<resultMap id="requestResultSet" type="Request">
		<result column="REQUEST_NO" property="requestNo"/>
		<result column="REQUEST_PRICE" property="requestPrice"/>
		<result column="GOODS_ID" property="goodsId"/>
		<result column="REQUEST_WRITER" property="requestWriter"/>
		<result column="REQUEST_DATE" property="requestDate"/>
		<result column="NICKNAME" property="nickname"/>
		<result column="SCORE" property="score"/>
	</resultMap>
	
	<resultMap id="replyResultSet" type="Reply">
		<result column="REPLY_NO" property="replyNo"/>
		<result column="REPLY_CONTENT" property="replyContent"/>
		<result column="GOODS_ID" property="goodsId"/>
		<result column="REPLY_WRITER" property="replyWriter"/>
		<result column="REPLY_DATE" property="replyDate"/>
		<result column="NICKNAME" property="nickname"/>
		<result column="SCORE" property="score"/>
	</resultMap>
	
	<resultMap id="nreplyResultSet" type="Nreply">
		<result column="NREPLY_NO" property="nreplyNo"/>
		<result column="NREPLY_CONTENT" property="nreplyContent"/>
		<result column="REPLY_NO" property="replyNo"/>
		<result column="NREPLY_WRITER" property="nreplyWriter"/>
		<result column="NREPLY_DATE" property="nreplyDate"/>
	</resultMap>
	
	<resultMap id="attachmentResultSet" type="Attachment">
		<result column="FILE_NO" property="fileNo"/>
		<result column="REF_BNO" property="refBno"/>
		<result column="UPLOAD_DATE" property="uploadDate"/>
		<result column="FILE_LEVEL" property="fileLevel"/>
		<result column="FILE_PATH" property="filePath"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="GOODS_ID" property="goodsId"/>
		<result column="CHANGE_NAME" property="changeName"/>
	</resultMap>
	
	<insert id="insertProduct" parameterType="Product">
		INSERT INTO PRODUCT
		(
			GOODS_ID,
			SELLER_NO,
			CATEGORY_M,
			TITLE,
			STATUS,
			SELL_PRICE,
			VIEW_COUNT,
			P_EXPLAIN,
			ENROLL_DATE,
			LOVEIT,
			RETURN_PD,
			LOCATION_T,
			PRODUCT_STATUS,
			NICKNAME,
			SCORE
		)
		VALUES
		(
			SEQ_GOODSID.NEXTVAL,
			#{sellerNo},
			#{categoryM},
			#{title},
			DEFAULT,
			#{sellPrice},
			DEFAULT,
			#{pExplain},
			DEFAULT,
			DEFAULT,
			#{returnPd},
			#{locationT},
			#{productStatus},
			#{nickname},
			#{score}
		)
	</insert>
	
	<select id="selectProductList" resultMap="productResultSet">
		SELECT GOODS_ID,
				SELLER_NO,
				CATEGORY_M,
				TITLE,
				STATUS,
				SELL_PRICE,
				VIEW_COUNT,
				P_EXPLAIN,
				ENROLL_DATE,
				LOVEIT,
				RETURN_PD,
				LOCATION_T,
				PRODUCT_STATUS,
				FILE_PATH,
				CHANGE_NAME
		FROM PRODUCT P
		JOIN MEMBER ON (SELLER_NO = USER_NO)
		JOIN ATTACHMENT USING(GOODS_ID)
		WHERE STATUS = '판매중'
		ORDER BY ENROLL_DATE DESC
	</select>
	
	<select id="selectListCount" resultType="_int">
		SELECT COUNT(*)
		FROM PRODUCT
	   WHERE STATUS = '판매중'
	</select>
	
	<update id="increaseCount" parameterType="_int">
		UPDATE PRODUCT
		SET VIEW_COUNT = VIEW_COUNT + 1
		WHERE GOODS_ID = #{goodsId}
	</update>
	
	<select id="selectProduct" parameterType="_int" resultMap="productResultSet">
		SELECT GOODS_ID,
				SELLER_NO,
				CATEGORY_M,
				TITLE,
				STATUS,
				SELL_PRICE,
				VIEW_COUNT,
				P_EXPLAIN,
				ENROLL_DATE,
				LOVEIT,
				RETURN_PD,
				LOCATION_T,
				PRODUCT_STATUS,
				M.NICKNAME,
				M.SCORE
		FROM PRODUCT P
		JOIN MEMBER ON (SELLER_NO = USER_NO)
		LEFT JOIN MEMBER M ON (P.NICKNAME = M.NICKNAME)
			AND (P.SCORE = M.SCORE)
		WHERE STATUS = '판매중'
			AND GOODS_ID = #{goodsId}
	</select>
	
	<select id="selectSearchCount" resultType="_int">
		SELECT COUNT(*)
		  FROM PRODUCT P
		 WHERE P.STATUS = '판매중' 
		 AND TITLE LIKE '%' || #{keyword} || '%'
	</select>
	
	<select id="selectSearchList" resultMap="productResultSet">
		SELECT GOODS_ID,
				SELLER_NO,
				CATEGORY_M,
				TITLE,
				STATUS,
				SELL_PRICE,
				VIEW_COUNT,
				P_EXPLAIN,
				ENROLL_DATE,
				LOVEIT,
				RETURN_PD,
				LOCATION_T,
				PRODUCT_STATUS,
				FILE_PATH,
				CHANGE_NAME
		FROM PRODUCT P
		JOIN MEMBER ON (SELLER_NO = USER_NO)
		JOIN ATTACHMENT USING(GOODS_ID)
		WHERE STATUS = '판매중'
		AND TITLE LIKE '%' || #{keyword} || '%'
		ORDER BY ENROLL_DATE DESC
		
	</select>
	
	<select id="selectRequestList" parameterType="_int" resultMap="requestResultSet">
		SELECT REQUEST_NO,
				REQUEST_PRICE,
				Q.GOODS_ID,
				REQUEST_WRITER,
				REQUEST_DATE,
				Q.NICKNAME,
				Q.SCORE
		FROM REQUEST Q
		LEFT JOIN PRODUCT P ON (P.GOODS_ID = Q.GOODS_ID)
			AND (Q.NICKNAME = P.NICKNAME)
			AND (Q.SCORE = P.SCORE)
	</select>
	
	<select id="selectReplyList" parameterType="_int" resultMap="replyResultSet">
		SELECT REPLY_NO,
				REPLY_CONTENT,
				R.GOODS_ID,
				REPLY_WRITER,
				REPLY_DATE,
				R.NICKNAME,
				R.SCORE
		FROM REPLY R
		LEFT JOIN PRODUCT P ON (P.GOODS_ID = R.GOODS_ID)
			AND (R.NICKNAME = P.NICKNAME)
			AND (R.SCORE = P.SCORE)
	</select>
	
	<select id="selectNreplyList" resultMap="nreplyResultSet">
		SELECT NREPLY_NO,
				NREPLY_CONTENT,
				N.REPLY_NO,
				NREPLY_WRITER,
				NREPLY_DATE
		FROM NREPLY N
		LEFT JOIN REPLY R ON (R.REPLY_NO = N.REPLY_NO)
	</select>

	<select id="selectcateCount" resultType="_int">
		SELECT COUNT(*)
		  FROM PRODUCT P
		 WHERE P.STATUS = '판매중' 
		 AND CATEGORY_M LIKE '%' || #{cate} || '%'
	</select>
	
	<select id="selectcateList" resultMap="productResultSet">
				SELECT GOODS_ID,
				SELLER_NO,
				CATEGORY_M,
				TITLE,
				STATUS,
				SELL_PRICE,
				VIEW_COUNT,
				P_EXPLAIN,
				ENROLL_DATE,
				LOVEIT,
				RETURN_PD,
				LOCATION_T,
				PRODUCT_STATUS,
				FILE_PATH,
				CHANGE_NAME
		FROM PRODUCT P
		JOIN MEMBER ON (SELLER_NO = USER_NO)
		JOIN ATTACHMENT USING(GOODS_ID)
		WHERE STATUS = '판매중'
		AND CATEGORY_M LIKE '%' || #{cate} || '%'
		ORDER BY ENROLL_DATE DESC
	</select>
	
	<insert id="insertAttachment" parameterType="Attachment">
		INSERT
		INTO ATTACHMENT(
			FILE_NO,
			REF_BNO,
			UPLOAD_DATE,
			FILE_LEVEL,
			FILE_PATH,
			ORIGIN_NAME,
			GOODS_ID,
			CHANGE_NAME
		)
		VALUES(
			SEQ_FILENO.NEXTVAL,
			#{refBno},
			DEFAULT,
			#{fileLevel},
			#{filePath},
			#{originName},
			SEQ_GOODSID.CURRVAL,
			#{changeName}
		)
	</insert>
	
	<select id="selectAttachment" resultMap="attachmentResultSet">
		SELECT FILE_NO,
				REF_BNO,
				UPLOAD_DATE,
				FILE_LEVEL,
				FILE_PATH,
				ORIGIN_NAME,
				A.GOODS_ID,
				CHANGE_NAME
		FROM ATTACHMENT A
		LEFT JOIN PRODUCT P ON (A.GOODS_ID = P.GOODS_ID)
		WHERE A.GOODS_ID = #{goodsId}
	</select>
	
	<update id="deleteProduct">
		UPDATE PRODUCT
		SET STATUS = '판매중지'
		WHERE GOODS_ID = #{goodsId}
	</update>
	
	<insert id="insertRequest" parameterType="Request">
		INSERT INTO REQUEST(
			REQUEST_NO,
			REQUEST_PRICE,
			GOODS_ID,
			REQUEST_WRITER,
			REQUEST_DATE,
			NICKNAME,
			SCORE
		)
		VALUES(
			SEQ_REQUESTNO.NEXTVAL,
			#{requestPrice},
			#{goodsId},
			#{requestWriter},
			DEFAULT,
			#{nickname},
			#{score}
		)
	</insert>
	
	<insert id="insertReply" parameterType="Reply">
		INSERT INTO REPLY(
			REPLY_NO,
			REPLY_CONTENT,
			GOODS_ID,
			REPLY_WRITER,
			REPLY_DATE,
			NICKNAME,
			SCORE
		)
		VALUES(
			SEQ_REPLYNO.NEXTVAL,
			#{replyContent},
			#{goodsId},
			#{replyWriter},
			DEFAULT,
			#{nickname},
			#{score}
		)
	</insert>
	
	<insert id="insertNreply" parameterType="Nreply">
		INSERT INTO NREPLY(
			NREPLY_NO,
			NREPLY_CONTENT,
			REPLY_NO,
			NREPLY_WRITER,
			NREPLY_DATE
		)
		VALUES(
			SEQ_NREPLYNO.NEXTVAL,
			#{nreplyContent},
			#{replyNo},
			#{nreplyWriter},
			DEFAULT
		)
	</insert>
</mapper>